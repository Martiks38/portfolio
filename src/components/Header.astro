---
import ButtonToTop from './ButtonToTop.astro'
import ButtonChangePageAspect from './ButtonChangePageAspect.astro'

// Styles
import '@assets/styles/components/Header/index.css'

// Images
import logo from '/logo.webp'

import { COLOR_ASPECT, NAME_COOKIE_COLOR } from '@/consts'

const ITEMS_NAV = [
	['INICIO', 'home'],
	['SOBRE MÍ', 'about-me'],
	['PROYECTOS', 'projects'],
	['CONTACTO', 'contact']
]

const { dark, light } = COLOR_ASPECT

/**
 * Indica si los iconos del botón están girados o no.
 * Valor 0: el contendio del botón no está rotado
 * Valor 1: el contenido del botón está girado
 */
let turns = 0

const setColorScheme = () => {
	const hasCookiePrefersColor = Astro.cookies.has(NAME_COOKIE_COLOR)

	if (!hasCookiePrefersColor) return

	const currentColor = Astro.cookies.get(NAME_COOKIE_COLOR).value

	if (currentColor === light) turns = 1
}

setColorScheme()

const color = turns === 0 ? dark : light
const changeColor = turns === 0 ? light : dark
---

<script src="@utils/handlerMenu.js"></script>
<script src="@utils/changeTheme.ts"></script>

<a href="#home" class="skipNavLinks">Ir al contenido principal</a>

<div class="asideButtons">
	<ButtonToTop />
</div>

<header class="headerPage">
	<div class="headerPage__container">
		<img src={logo} alt="Giuliano Cappa" class="logo" width="38" height="38" />
		<div class="headerPage__actions">
			<nav class="nav">
				<ul class="navMenu">
					{
						ITEMS_NAV.map((item_menu) => (
							<li>
								<a href={`#${item_menu[1]}`} class="navMenu__item">
									{item_menu[0]}
								</a>
							</li>
						))
					}
				</ul>
			</nav>

			<ButtonChangePageAspect changeColor={changeColor} color={color} turns={turns} />
		</div>
	</div>
</header>

<div class="backdropMenu"></div>

<div class="controlPanelBottom">
	<button class="menuBtn" aria-hidden="true" aria-label="Menú de navegación" aria-expanded="false">
		<span class="menuBtn__line"></span>
	</button>
	<ButtonChangePageAspect changeColor={changeColor} color={color} turns={turns} />
</div>
